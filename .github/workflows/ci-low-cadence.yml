name: Continuous Integration (Low Cadence)

on:
  workflow_call:
  workflow_dispatch:
  repository_dispatch:
    types: run-slow-tests
  schedule:
    - cron: '0 0,12 * * *'
  push:
    branches:
      - master
      - 'release/**'
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
      - 'release/**'

concurrency:
  group: ci-low-cadence-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name != 'schedule' }}

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.java.installations.auto-detect=false -Dorg.gradle.warning.mode=fail'
  INSTALL_COMPILER_RETRIES: '5'
  JAVA_VERSION: '17'

permissions:
  contents: read

jobs:
  java-slow-tests:
    name: Java Slow Tests (JDK ${{ matrix.java }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        java: [ '17', '21', '25' ]
        os: ['ubuntu-24.04', 'windows-latest', 'macos-15']
    steps:
      - name: Use faster temporary storage (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "TMP=$env:RUNNER_TEMP" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
          echo "TEMP=$env:RUNNER_TEMP" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Linux/MacOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Windows)
        if: runner.os == 'Windows'
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=$env:JAVA_HOME" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BUILD_JAVA_VERSION=${{ matrix.java }}" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Setup localhost name (MacOS)
        if: runner.os == 'macOS'
        run: |
          sudo sed -i bak "s/localhost/localhost $(hostname)/" /etc/hosts
          dscacheutil -flushcache
      - name: Setup java to run Gradle
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Enable core dumps (Linux)
        if: runner.os == 'Linux'
        run: |
          ulimit -c unlimited
          sudo systemctl stop apport.service || true
          sudo systemctl disable apport.service || true
          sudo mkdir -p /var/coredump
          sudo chmod a+rw /var/coredump
          sudo sysctl -w kernel.core_pattern="/var/coredump/core_%e.%p"
      - name: Enable core dumps (MacOS)
        if: runner.os == 'macOS'
        run: |
          ulimit -c unlimited
          sudo mkdir -p /var/coredump
          sudo chmod a+rw /var/coredump
          sudo sysctl -w kern.coredump=1
          sudo sysctl -w kern.corefile="/var/coredump/core.%P"
      - name: Build and Run Slow Tests with Gradle
        run: ./gradlew slowTest
        env:
          BUILD_JAVA_VERSION: ${{ matrix.java }}
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          ${{ runner.os == 'Windows' && 'echo "file=build/distributions/test_logs.tbz2" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append' || 'echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT' }}
          ./gradlew tarTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name: crash-logs-${{ matrix.os }}-java-${{ matrix.java }}
          path: ${{ steps.copy_test_logs.outputs.file }}

  java-javadoc:
    name: JavaDoc (JDK ${{ matrix.java }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        java: [ '17', '21', '25' ]
        os: [ 'ubuntu-24.04' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV
      - name: Setup java to run Gradle
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Build and Run Javadoc
        run: ./gradlew javadoc
        env:
          BUILD_JAVA_VERSION: ${{ matrix.java }}

  cpp-slow-tests-gcc:
    name: C++ Slow System Tests GCC ${{ matrix.version }}
    runs-on: ubuntu-24.04
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        version: [ '14' ]
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ env.JAVA_VERSION }}" >> $GITHUB_ENV
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Install compiler
        run: |
          echo 'Acquire::Retries "${INSTALL_COMPILER_RETRIES}";' | sudo tee -a /etc/apt/apt.conf.d/99retries
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev
      - name: Build
        run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors --slow-system-tests --no-system-tests --no-unit-tests --cxx-hide-deprecation-message
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT
          ./gradlew tarTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name: crash-logs-cpp-slow-tests-gcc-${{ matrix.version }}
          path: ${{ steps.copy_test_logs.outputs.file }}

  cpp-slow-tests-clang:
    name: C++ Slow System Tests Clang ${{ matrix.version }}
    runs-on: ubuntu-24.04
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        version: [ '21' ]
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ env.JAVA_VERSION }}" >> $GITHUB_ENV
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Install compiler
        run: |
          echo 'Acquire::Retries "${INSTALL_COMPILER_RETRIES}";' | sudo tee -a /etc/apt/apt.conf.d/99retries
          sudo mkdir -p /etc/apt/keyrings/
          curl --retry ${INSTALL_COMPILER_RETRIES} https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg
          echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] https://apt.llvm.org/noble/ llvm-toolchain-noble-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list
          sudo apt-get update
          sudo apt-get install -y clang-${{ matrix.version }} libbsd-dev uuid-dev
      - name: Build
        run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors --slow-system-tests --no-system-tests --no-unit-tests --cxx-hide-deprecation-message
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT
          ./gradlew tarTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name:  crash-logs-cpp-slow-tests-clang-${{ matrix.version }}
          path: ${{ steps.copy_test_logs.outputs.file }}

  cpp-slow-tests-msvc:
    name: C++ Slow System Tests MSVC
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      CC: cl
      CXX: cl
    steps:
      - name: Use faster temporary storage (Windows)
        run: |
          echo "TMP=$env:RUNNER_TEMP" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
          echo "TEMP=$env:RUNNER_TEMP" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=$env:JAVA_HOME" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BUILD_JAVA_VERSION=${{ env.JAVA_VERSION }}" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Build
        run: cppbuild/cppbuild.ps1 --slow-system-tests --no-system-tests --no-unit-tests --cxx-hide-deprecation-message
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "file=build/distributions/test_logs.tbz2" | Out-File $env:GITHUB_OUTPUT -Encoding utf8 -Append
          ./gradlew tarTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name: crash-logs-cpp-slow-tests-msvc-latest
          path: ${{ steps.copy_test_logs.outputs.file }}

  cpp-sanitize-gcc:
    name: C++ Sanitise Build GCC ${{ matrix.version }}
    runs-on: ubuntu-24.04
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        version: [ '14' ]
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ env.JAVA_VERSION }}" >> $GITHUB_ENV
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Install compiler
        run: |
          echo 'Acquire::Retries "${INSTALL_COMPILER_RETRIES}";' | sudo tee -a /etc/apt/apt.conf.d/99retries
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev
      - name: Build
        run: cppbuild/cppbuild --relwithdebinfo-build --sanitise-build --c-warnings-as-errors --cxx-warnings-as-errors --slow-system-tests --cxx-hide-deprecation-message
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT
          ./gradlew tarTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name: crash-logs-cpp-sanitize-gcc-${{ matrix.version }}
          path: ${{ steps.copy_test_logs.outputs.file }}

  cpp-sanitize-clang:
    name: C++ Sanitise Build Clang ${{ matrix.version }}
    runs-on: ubuntu-24.04
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        version: [ '21' ]
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ env.JAVA_VERSION }}" >> $GITHUB_ENV
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Install compiler
        run: |
          echo 'Acquire::Retries "${INSTALL_COMPILER_RETRIES}";' | sudo tee -a /etc/apt/apt.conf.d/99retries
          sudo mkdir -p /etc/apt/keyrings/
          curl --retry ${INSTALL_COMPILER_RETRIES} https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg
          echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] https://apt.llvm.org/noble/ llvm-toolchain-noble-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list
          sudo apt-get update
          sudo apt-get install -y clang-${{ matrix.version }} libbsd-dev uuid-dev
      - name: Build
        run: cppbuild/cppbuild --relwithdebinfo-build --sanitise-build --c-warnings-as-errors --cxx-warnings-as-errors --slow-system-tests --cxx-hide-deprecation-message
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "file=build/distributions/test_logs.tbz2" >> $GITHUB_OUTPUT
          ./gradlew tarTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name: crash-logs-cpp-sanitize-clang-${{ matrix.version }}
          path: ${{ steps.copy_test_logs.outputs.file }}
